Title: Chapter 1 — Defining ‘craft’ Date: 2017/01/02

= Defining ‘craft’ =

In ‘The Craftsman’, Richard Sennett is fast to give a definition of craftsmanship: « an enduring, basic human impulse, the desire to do a job well for its own sake ». As comforting as it is to be able to put craftsmanship back to a basic human impulse, still in the prologue, he states his two main theses: firstly « all skills, even the most abstract, begin as bodily practices; » secondly « technical understanding develops through the powers of imagination ». Without even needing to dig into the theses, Sennett shows that craftsmanship is somewhere within skills, technique, bodies and imagination.

<blockquote>A major argument of Sennett’s is the role of social order in the development of craft. Sennett states that an ancient ideal of craftsmanship is “joined skill in community” (51). Medieval Workshops, in particular, provided a communal atmosphere and social structure that guided the development of skill through “authority in the flesh” as opposed to knowledge “set down on paper” (54). There is an implicit authority in the workshop, a social order that values the “quality of skill” over “occupation of a place of honor” (61). The workshop binds people together as if forms a community of masters and apprentices. Quality and ethical codes of work are transmitted through such communities (and the guilds in which they participate) ensuring continuity while also allowing for creative developments through partnerships and communal participation. The medieval workshop began its demise with the Renaissance separation of art and craft. This separation emphasised the individual and her/his creation of “art” over communal development. The workshop became an inferior social space reserved for a lower class of society. <br><small>(Josh Sweeden, Ph.D. student in Practical Theology on ‘The Craftsman’, by Richard Sennett)<sup id="a1">[[#f1|1]]</sup></small>
</blockquote>
By the end of the 18th century / start of the 19th, we see the appearance of industrial capitalism. A capitalism of investments, that rests on a tight combination of technique and science. This will enable very high levels of production, by, not only, but importantly, enhancing productivity,<sup id="a2">[[#f2|2]]</sup> something we will come back to in chapter 2. Consequence of this is the destruction of a large portion (peasantry) of the population's physical health, not to mention it's wealth. The peasants then becomes proletarian, etc, etc. Our modern history has deconstructed craft. Away from the workshop, into the production chain.

<blockquote>Next, Sennett explores the implications of machines (replicants and robots) for craftwork. He ultimately shows how machines quickly were created for large-scale production, “gradually threatening the standing of the most skilled laborers and increased the number of semi- or unskilled workers.” Sennett affirms machinery for the sake of eliminating “unskilled, noisome tasks,” but claims that it is problematic when it “replace[s] high-cost skilled labor” (106). Instead of workshops, the new working community was steel mills and factories, and as such a new social structure was adopted, carrying different assumptions of appropriate work conditions as well as knowledge and authority. <br><small>(Josh Sweeden, Ph.D. student in Practical Theology on ‘The Craftsman’, by Richard Sennett)</small>
</blockquote>
20th century something new happens; consumerist capitalism. The notion of consumerism, is likened to Fordism at first, not to be confused with productivist capitalism which supposes the proletarisation of the producers<!--—the workers, that then become proletarian, who then would lose all of their professional know how-->. In the consumerist capitalism model it's not only the workers that lose their know how, the effects and effects on mentality extend to the consumers, who don't lose knowledge, but certainly lose their savoir vivre. I disambiguate slightly in historical context not to speak about software directly, but to be able to speak about the possibilities of craft within what software is.

It understandable and logical, in ways, why practice with software is not viewed today as a craft. First of all, by it's very nature, it is no longer a manual action. It starts and it ends on the same virtualisation apparatus that sees all sorts of other information and media. It's the same apparatus that a lot of people use today, for very many other tasks. The only real basis for materiality within software is analogy: a major portion of application software interface relies on analogies such as files, folders, documents, desktops, copying, pasting etc. All through the spectrum of software, from the seemingly simple to the complex and specific, we're asked to draw upon understandings of the physical world: paint brushes, paint buckets, pencils to perform actions that are going to be like what using those would be in the real world, but not really. When Sennett says that ''all skills, as abstract as they can be, begin as bodily practices,'' it's hard to imagine one being able to develop skills in the way that we understand them, thanks to Sennett, in a virtual world dependent on analogies.

It is also clear that Sennett's second thesis is hard to project in the world of software. One of the other specificities of software is that it is made by people attempting to solve to a problem, facilitate a specific task. The software maker defines boundaries, something that does not exactly stimulate imagination. This is not to say that technical understanding can not be acquired through the use of software, but again, the scope of that understanding is solely in the hands of the one making the intermediate. It's very simple to think of software only as a tool, and therefor, it has ‘single’ tasks.

We are looking at a (new) space for work that is extremely tailored. Computer programming is a sort of building by adding, in opposition to a manual craft which is more comparable to sculpting pre-existing materials. When an application that enables a virtual practice is programmed, the construction model is the other way around to the manual craft. The developer must consider what the premises for the practice are. She/he must develop an understanding of what the craft is, and how it can be interpreted by a computer. Then, by building, begin to answer all the needs of the (interpreted) craft. I would add that this, even when done properly, is only half the battle, the other half being the building of the communication devices that will give access to all that has been engineered. Access to the end user. Half of the job is in the interface.

I struggle to think of utilitarian software that does not have roots in some sort of craft. Even the most mundane computer tasks like file sorting, can have ways of doing that are the result of ''the desire to do a job well for its own sake''. If it didn't then we would have to ask operating system makers for alphabetical sorting, date sorting, logical directory structures, etc. There is a need for us to rethink what craft is today, towards digital craft, where the computer is as primary tool and environment. We have indeed lost physical tangibility, bodily actions and certain ways of imagination, but there is still enormous quantities of skill to be derived from the —re-imagined— techniques.

The difference between traditional crafts and digital crafts is that they have a different genealogy. A traditional craft builds upon itself, from itself. Sennett points to the importance of social order for craft. He speaks of communities of people in workshops and in same spaces. This relies on the existence of physical bodily actions, something that we gave up with software when we ‘agreed’ that machines would be faster and better than workers and craftsmen. I do however believe that it is towards a type of social order that we must look to start rebuilding an understanding of what craft is on-screen: the orders and hierarchy that we've built into computers. The logics that have been built in to computing systems, are a type of social order that we actually all respect as they are, we just don't really know about it; the orders don't make themselves apparent to the end user, but they can be simplified / understood as communications, requests and responses, managements and resource distributions. For us to be able to perceive quality digital practice as a craft, we must start by acknowledging and celebrating it's environment, how close it is to social order, how it came to be, and the immense amount of culture(s) and knowledge that makes it possible. We are part of this culture when we use computers. It is a relatively young culture, but one that is given to us, made to work for us to and helps us to better ourselves, so we must celebrate it. Then we can rebuild an appreciation for what is actually given to us through software. Logical as it is that software wants itself discreet and utilitarian, it is our job (but not only ours job, cfr chapter 3) to remind ourselves what is going on ‘under the hood’ on during the actions on screen.

If we can keep in mind how fantastic the sciences and progress that enable computers are, then we are closer to being able to feel the granularity that exists for and in all software, however seemingly simple or complex the interface.

One remaining aspect to address is the perception of quality within craft. Quality is important here because it gives us appreciation. Quality is as complex in manual craft as it is in digital craft. It is not the object of this study to attempt an explanation of what quality is, instead, I think that the embrace of an adversarial attitude to all the understandings and views of quality would be healthy. The fact that contemporary philosophy is still in discourse about how to distinguish certain kinds of qualities from one another, points to large diversity, range, needs, desires, morals, and cultures of different people. This same multiplicity is involved in digital cultures, so I can not pronounce on what quality digital craft is for all of it's realm. However the presence of —albeit differently understood— good and bad quality objects is beneficial to the understanding of digital craft. The discussion of what makes a quality software product is, in itself, helpful to highlight the granularity and ‘social’ layers I call for above.

To end off this chapter, I return to Sennett who gives us an example of his understanding of good quality modern craft:

<blockquote>Sennett does find hope in new developments of high technology. He cites the Linux Corporation which developed a sense of cooperation and collaboration among workers addressing problems. Instead of a framework of competition which establishes “clear standards of competition and closure…needed to measure performance and to dole out rewards,” Linux succeeded through “technological craftsmanship, the intimate, fluid join between problem solving and problem finding” (33). Linux revives a social space for craft similar to that of medieval workshops. It is attractive for people who aspire to be good craftsmen, who are “depressed, ignored, or misunderstood by [other] social institutions” (145).
</blockquote>
To refer back to the economic models noted over time —that were interrupting the quotes of Sennett's book at the start of the chapter— an other perspective on the different frameworks could be to call them ‘economies of contribution’: a contributive economy is an economy inside which those who contribute individuate themselves while contributing. This is the landscape, the Linux, free and open source software landscape, where skills and communities come back together to rebuild know how, rebuild quality in social manors, for the better of themselves, and for the better of all involved. I believe this to be what we should be looking and demanding for, in digital crafts.


-----

<b id="f1">1 </b>Josh Sweeden, Ph.D. student in Practical Theology on ‘The Craftsman’, by Richard Sennett: http://www.bu.edu/cpt/resources/book-reviews/craftsman-by-richard-sennett/ [[#a1|↩]]

<b id="f2">2 </b>Transcribed extracts from a Bernard Stiegler interview on Contributive economies: https://vimeo.com/32540487 [[#a2|↩]]


-----

= Table of contents: =

== [[#|Abstract]] ==

== [[#|Introduction]] ==

== [[chapter-1-defining-craft.html|Chapter 1 : defining ‘craft’]] ==

== [[chapter-2-efficacy-or-efficiency.html|Chapter 2 : efficacy or efficiency]] ==

== [[chapter-3-the-user-the-learning-curve.html|Chapter 3 : the user, the learning curve]] ==

== [[dissertation-conclusions.html|Conclusions]] ==

